---
- name: kriive thinkpad setup
  connection: local
  hosts: localhost
  become_method: sudo
  become: yes
  tasks:
    - name: Remove archinstall logs 
      ansible.builtin.file:
        path: /var/log/archinstall
        state: absent

    - name: Update and upgrade Arch
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Install the base required packages
      pacman:
        name:
          - base-devel

    - name: Create the `aur_builder` user
      ansible.builtin.user:
        name: aur_builder
        create_home: yes
        group: wheel

    - name: Allow the `aur_builder` user to run `sudo pacman` without a password
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/11-install-aur_builder
        line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
        create: yes
        validate: 'visudo -cf %s'

    - name: Install paru using makepkg if it isn't installed already
      kewlfft.aur.aur:
        name: paru
        use: makepkg
        state: present
      become_user: aur_builder

    - name: Install various packages
      pacman:
        name:
          - sway
          - polkit
          - swaylock
          - swayidle
          - swaybg
          # To enable screen sharing with pipewire.
          - xdg-desktop-portal-wlr
          - waybar
          - foot
          - wl-clipboard
          - slurp
          - grim
          - restic
          - mako
          - pamixer
          - playerctl
          - ttf-joypixels
          - fish
          - plymouth
          - helix
          - firefox
          - seahorse
          - bat
          - lsd
          - ripgrep
          - rsync
          - tailscale
          - gnome-keyring
          - mpv
          - zathura
          - zathura-pdf-mupdf
          - imv
          - chrony
          - fisher
          - nm-connection-editor
          # This is required to have GNOME Keyring working
          - network-manager-applet
          - dust
          - duf
          - go
          - greetd
          - greetd-tuigreet
          - gopls
          - tmux
          - man-db
          - man-pages
          - openbsd-netcat
          - whois
          - telegram-desktop
          - docker
          - docker-compose
          - firewalld
          # Enable audio from the laptop speakers
          - sof-firmware
          - bluez
          - bluez-utils
          - libnotify
          - intel-media-driver
          - vulkan-intel
          - yt-dlp
          - unzip
          # fwupd
          - fwupd
          # Nerd fonts
          - ttf-jetbrains-mono-nerd
          # Install virt-manager and qemu
          - virt-manager
          - qemu-desktop
          - wlsunset

    - name: Install packages from AUR
      kewlfft.aur.aur:
        use: paru
        aur_only: yes
        # TODO: check if needed
        extra_args: "--noprovides"
        name:
          - tofi
          - autotiling
          - networkmanager-dispatcher-chrony
          - nwg-bar-bin
          - nnn-nerd
          - swayosd-git
          - hardened-malloc-git
          - docker-rootless-extras
          - chayang-git
      become_user: aur_builder

    - name: Enable remapping user id for Docker rootless
      ansible.builtin.lineinfile:
        path: /etc/subuid
        line: 'kriive:165536:65536'
        create: yes

    - name: Enable remapping group id for Docker rootless
      ansible.builtin.lineinfile:
        path: /etc/subgid
        line: 'kriive:165536:65536'
        create: yes

    - name: Copy the .config folder
      ansible.builtin.copy:
        # Use trailing slash to copy only the content of the folder.
        src: ./home/kriive/.config/
        dest: /home/kriive/.config
        mode: 0744
        directory_mode: 0700
        owner: "kriive"
        group: "kriive"

    - name: Create .ssh if not present
      file:
        path: /home/kriive/.ssh
        state: directory

    - name: Copy the ssh config file
      ansible.builtin.copy:
        # Use trailing slash to copy only the content of the folder.
        src: ./home/kriive/.ssh/config
        dest: /home/kriive/.ssh/config
        mode: 0644
        owner: "kriive"
        group: "kriive"

    - name: Copy the greetd folder to /etc
      ansible.builtin.copy:
        src: ./etc/greetd/
        dest: /etc/greetd
        mode: 0644
        directory_mode: 0755
        owner: "root"
        group: "root"

    - name: Copy the plymouth folder to /etc
      ansible.builtin.copy:
        src: ./etc/plymouth/
        dest: /etc/plymouth
        mode: 0644
        directory_mode: 0755
        owner: "root"
 
    - name: Copy chrony.conf to /etc/chrony.conf
      ansible.builtin.copy:
        src: ./etc/chrony.conf
        dest: /etc/chrony.conf
        mode: 0644
        directory_mode: 0755
        owner: "root"
        group: "root"

    - name: Copy mkinitcpio.conf to /etc/mkinitcpio.conf
      ansible.builtin.copy:
        src: ./etc/mkinitcpio.conf
        dest: /etc/mkinitcpio.conf
        mode: 0644
        directory_mode: 0755
        owner: "root"
        group: "root"

    - name: Copy resolved.conf to /etc/systemd/resolved.conf
      ansible.builtin.copy:
        src: ./etc/systemd/resolved.conf
        dest: /etc/systemd/resolved.conf
        mode: 0644
        directory_mode: 0755
        owner: "root"
        group: "root"

    - name: Copy utilities to /usr/local/bin
      ansible.builtin.copy:
        src: ./usr/local/bin/
        dest: /usr/local/bin
        owner: root
        group: root
        mode: 0755
        directory_mode: 0755

    - name: Copy greetd pam module
      ansible.builtin.copy:
        src: ./etc/pam.d/greetd
        dest: /etc/pam.d/greetd
        owner: root
        group: root
        mode: 0644

    # - name: Enable hardened_malloc globally
    #   ansible.builtin.lineinfile:
    #     path: /etc/ld.so.preload
    #     line: '/usr/lib/libhardened_malloc.so'
    #     create: yes
   
    - name: Disable and stop systemd-timesyncd.service
      ansible.builtin.systemd:
        name: systemd-timesyncd
        state: stopped
        enabled: no

    - name: Enable and start chronyd.service
      ansible.builtin.systemd:
        name: chronyd
        enabled: yes
        state: started

    - name: Enable and start systemd-resolved.service
      ansible.builtin.systemd:
        name: systemd-resolved
        enabled: yes
        state: started

    - name: Enable and start bluetooth.service
      ansible.builtin.systemd:
        name: bluetooth
        enabled: yes
        state: started

    - name: Remove /etc/resolv.conf
      ansible.builtin.file:
        path: /etc/resolv.conf
        state: absent
  
    - name: Create a symbolic link to /etc/resolv.conf
      ansible.builtin.file:
        src: /run/systemd/resolve/stub-resolv.conf
        dest: /etc/resolv.conf
        owner: root
        group: root
        state: link

    - name: Enable and start firewalld.service
      ansible.builtin.systemd:
        name: firewalld
        enabled: yes
        state: started

    # - name: Enable spotifyd user service
    #   ansible.builtin.systemd:
    #     name: spotifyd
    #     enabled: yes
    #     state: started
    #     scope: user
    #   become_user: kriive

    - name: Enable gcr ssh user socket
      ansible.builtin.systemd:
        name: gcr-ssh-agent.socket
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Enable gcr ssh user service
      ansible.builtin.systemd:
        name: gcr-ssh-agent.service
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Enable backup user timer
      ansible.builtin.systemd:
        name: backup.timer
        daemon_reload: true
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Enable docker user service
      ansible.builtin.systemd:
        name: docker
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Enable mako service
      ansible.builtin.systemd:
        name: mako
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Enable foot server user service
      ansible.builtin.systemd:
        name: foot-server
        enabled: yes
        state: started
        scope: user
      become_user: kriive

    - name: Remove the user 'aur_builder'
      ansible.builtin.user:
        name: aur_builder
        state: absent
        remove: yes

    # - name: Create override folder for autologin
    #   file:
    #     owner: root
    #     group: root
    #     mode: 0755
    #     path: /etc/systemd/system/autologin.service.d
    #     state: directory
        
    # - name: Install override for autologin
    #   ini_file:
    #     dest: /etc/systemd/system/autologin.service.d/override.conf
    #     owner: root
    #     group: root
    #     mode: 0644
    #     section: Service
    #     option: ExecStart
    #     value: ""

    # - name: Install override for autologin
    #   ini_file:
    #     dest: /etc/systemd/system/autologin.service.d/override.conf
    #     owner: root
    #     group: root
    #     mode: 0644
    #     exclusive: false
    #     section: Service
    #     option: ExecStart
    #     value: "autologin kriive /usr/local/bin/sway-run.sh"

    # - name: Enable autologin.service
    #   ansible.builtin.systemd:
    #     name: autologin
    #     enabled: yes

    - name: Get UUID for main hard disk
      ansible.builtin.command: blkid /dev/nvme0n1p2 -s UUID -o value
      register: uuid

    - name: Write cmdline
      ansible.builtin.copy:
        dest: /etc/kernel/cmdline
        content: "quiet splash rd.luks.name={{ uuid.stdout.split()[0] }}=root root=/dev/mapper/root rw rootfstype=ext4"
        owner: root
        group: root
        mode: 0644

    - name: Recreate initcpio
      ansible.builtin.command: mkinitcpio -P

    - name: Adding kriive to video group
      ansible.builtin.user:
        name: kriive
        groups: video
        append: yes

    - name: Remove sudoer file for aur_builder
      ansible.builtin.file:
        path: /etc/sudoers.d/11-install-aur_builder
        state: absent
